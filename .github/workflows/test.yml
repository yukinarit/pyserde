name: Tests

on: [push, pull_request]

jobs:

  test:
    name: Python [${{ matrix.python-version }}] on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, pypy3]
        os: [ubuntu-20.04, macos-10.15, windows-2019]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # - name: Restore pip cache
    #   # Caching on Windows is turned off due to inconsistent behaviour
    #   if: matrix.os != 'windows-2019'
    #   uses: actions/cache@v2
    #   with:
    #     path: ${{ env.pythonLocation }}
    #     key: ${{ matrix.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/Pipfile') }}
    - name: Install dependencies
      run: |
        pip install poetry
        make setup
    - name: Run tests
      run: |
        make test
        make examples

  check_formatting:
    name: Check formatting
    needs: test
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    # - name: Restore pip cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ${{ env.pythonLocation }}
    #     key: ubuntu-20.04-${{ env.pythonLocation }}-${{ hashFiles('**/.pre-commit-config.yaml', '**/pyproject.toml') }}
    - name: Install dependencies
      run: |
        pip install pre-commit
        pre-commit install
    - name: Check formatting
      run: pre-commit run -a
    - name: Comment PR
      if: ${{ failure() && github.event_name == 'pull_request' }}
      uses: thollander/actions-comment-pull-request@1.0.2
      with:
        message: 'Please consider formatting your code according to the standards described here: https://github.com/yukinarit/pyserde/blob/master/CONTRIBUTING.md'
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_coverage:
    name: Check coverage
    needs: test
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    # - name: Restore pip cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ${{ env.pythonLocation }}
    #     key: ubuntu-20.04-${{ env.pythonLocation }}-${{ hashFiles('**/Pipfile') }}
    - name: Install dependencies
      run: |
        pip install poetry
        poetry install
    - name: Check coverage
      run: make coverage
    - name: Upload coverage report to codecov.io
      uses: codecov/codecov-action@v1

  run_benchmark:
    name: Run benchmark
    needs: test
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    # - name: Restore pip cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ${{ env.pythonLocation }}
    #     key: ubuntu-20.04-${{ env.pythonLocation }}-${{ hashFiles('**/Pipfile') }}
    - name: Install dependencies
      run: |
        pip install poetry
        make setup-bench
    - name: Run benchmark
      run: make bench
