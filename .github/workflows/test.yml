name: Tests

on: [pull_request]

jobs:

  test:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pip install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          cache: poetry
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        run: make setup
      - name: Run tests
        run: |
          make test
      - name: Run examples
        run: |
          make examples
        if: matrix.python-version == '3.12'
      - name: Run tests (orjson)
        run: |
          pip install orjson
          make test
      - name: Run examples (orjson)
        run: |
          make examples
        if: matrix.python-version == '3.12'
      - name: Run tests (sqlalchemy)
        run: |
          poetry install --extras sqlalchemy
          make test
      - name: Run examples (sqlalchemy)
        run: |
          make examples
        if: matrix.python-version == '3.12'

  check_formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: .pre-commit-config.yaml
      - name: Install poetry
        run: pip install poetry
      - name: Check formatting
        run: make setup check
      - name: Comment PR
        if: ${{ failure() && github.event_name == 'pull_request' }}
        uses: thollander/actions-comment-pull-request@v3.0.0
        with:
          message: 'Please consider formatting your code according to the standards described here: https://github.com/yukinarit/pyserde/blob/main/CONTRIBUTING.md'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_coverage:
    name: Check coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pip install poetry
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: poetry
          cache-dependency-path: pyproject.toml
      - name: Install dependencies
        run: poetry install --extras sqlalchemy
      - name: Check coverage
        run: make coverage
      - name: Upload coverage report to codecov.io
        uses: codecov/codecov-action@v4
